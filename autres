#!/bin/bash
clear
echo ""
echo ""
echo ""
echo -e " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñà     ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà
‚ñë   ‚ñë‚ñà‚ñà‚ñà  ‚ñë     ‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà          ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñë 
    ‚ñë‚ñà‚ñà‚ñà       ‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà          ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
    ‚ñë‚ñà‚ñà‚ñà       ‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà           ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà
    ‚ñë‚ñà‚ñà‚ñà       ‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà      ‚ñà    ‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà
    ‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë      ‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
   ‚ñë‚ñë‚ñë‚ñë‚ñë          ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë          ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë       ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  "
echo ""
echo ""
echo ""

encode_base64() {
  read -p "Texte √† encoder : " texte
  echo -n "$texte" | base64
}

decode_base64() {
  read -p "Base64 √† d√©coder : " b64
  echo "$b64" | base64 -d
}

encode_base85() {
  read -p "Texte √† encoder : " texte
  echo -n "$texte" | base85
}

decode_base85() {
  read -p "Base85 √† d√©coder : " b85
  echo "$b85" | base85 -d
}

encode_hex() {
  read -p "Texte √† encoder : " texte
  echo -n "$texte" | xxd -p
}

decode_hex() {
  read -p "Hex √† d√©coder : " hex
  echo "$hex" | xxd -r -p
}

encode_url() {
  read -p "Texte √† encoder (URL) : " txt
  python3 -c "import urllib.parse; print(urllib.parse.quote('''$txt'''))"
}

decode_url() {
  read -p "Texte encod√© URL √† d√©coder : " txt
  python3 -c "import urllib.parse; print(urllib.parse.unquote('''$txt'''))"
}

convert_cert_format() {
  echo "1. PEM -> DER"
  echo "2. DER -> PEM"
  echo "3. PEM -> PKCS#12 (.p12)"
  read -p "Choix de conversion : " chx
  read -p "Fichier source : " src
  read -p "Fichier de sortie : " dst

  case $chx in
    1) openssl x509 -in "$src" -outform DER -out "$dst" ;;
    2) openssl x509 -in "$src" -inform DER -out "$dst" ;;
    3) 
      read -p "Cl√© priv√©e associ√©e : " key
      openssl pkcs12 -export -out "$dst" -inkey "$key" -in "$src"
      ;;
    *) echo "‚ùå Choix invalide" ;;
  esac
}

generate_secure_random() {
  read -p "Nombre d'octets √† g√©n√©rer : " nb
  openssl rand -hex "$nb"
}

while true; do
  echo -e "\e[1;36m====== Menu outils encodage/conversion OpenSSL ======\e[0m"
  echo "1. Encoder en Base64"
  echo "2. D√©coder en Base64"
  echo "3. Encoder en Base85"
  echo "4. D√©coder en Base85"
  echo "5. Encoder en Hexad√©cimal"
  echo "6. D√©coder en Hexad√©cimal"
  echo "7. Encoder en URL"
  echo "8. D√©coder en URL"
  echo "9. Conversion de certificats (PEM, DER, P12)"
  echo "10. G√©n√©rer nombre al√©atoire s√©curis√© (hex)"
  echo "11. Retour"
  read -p "Ton choix : " choix

  case $choix in
    1) encode_base64 ;;
    2) decode_base64 ;;
    3) encode_base85 ;;
    4) decode_base85 ;;
    5) encode_hex ;;
    6) decode_hex ;;
    7) encode_url ;;
    8) decode_url ;;
    9) convert_cert_format ;;
    10) generate_secure_random ;;
    11) echo "üîí Fermeture..."; bash ./project;  break ;;
    *) echo "‚ùå Choix invalide" ;;
  esac
done
