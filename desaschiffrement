#!/bin/bash
clear
echo ""
echo ""
echo ""
echo -e " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà                  ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà     ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñë     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà                   ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà  ‚ñà ‚ñë     ‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñë 
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà         
 ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà      ‚ñë‚ñà‚ñà‚ñà         
 ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà                   ‚ñë‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà ‚ñë   ‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà
 ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà                  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë                  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  "
echo ""
echo ""
echo ""
# Tableau des algorithmes support√©s
algo=("RSA")

# Fonction de d√©chiffrement RSA
rsa_decrypt() {
  read -p "üìÇ Fichier √† d√©chiffrer : " encrypted
  if [[ ! -f "$encrypted" ]]; then
    echo "‚ùå Fichier introuvable."
    return
  fi

  read -p "üîê Chemin vers la cl√© priv√©e (.pem) : " privkey
  if [[ ! -f "$privkey" ]]; then
    echo "‚ùå Cl√© priv√©e introuvable."
    return
  fi

  output="${encrypted}_dec"
  openssl pkeyutl -decrypt -inkey "$privkey" -in "$encrypted" -out "$output"
  if [[ $? -eq 0 ]]; then
    echo "‚úÖ Fichier d√©chiffr√© avec succ√®s veuillez consulter : $output dans le m√™me r√©pertoire"
  else
    echo "‚ùå √âchec du d√©chiffrement."
  fi
}

# Menu principal
while true; do
  echo ""
  echo -e "\e[1;34m====== üîì D√©chiffrement Asym√©trique OpenSSL (RSA) ======\e[0m"
  for i in "${!algo[@]}"; do
    printf "%d. %s\n" "$((i+1))" "${algo[$i]}"
  done
  echo "2. Retour"
  echo "==========================================="

  read -p "üß≠ Ton choix : " choix

  case "$choix" in
    1)
      echo "üîì Mode RSA s√©lectionn√©"
      rsa_decrypt
      ;;
    2)
      echo "‚Ü©Ô∏è Retour au menu principal..."
      bash ./project
      break
      ;;
    *)
      echo "‚ùå Choix invalide. R√©essaye."
      ;;
  esac
done
