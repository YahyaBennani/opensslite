#!/bin/bash
clear
echo ""
echo ""
echo ""
echo -e " ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà          ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà      ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà        ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà          ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà    ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà  ‚ñà ‚ñë        ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà  ‚ñà ‚ñë        ‚ñà‚ñà‚ñà     ‚ñë‚ñë‚ñë     ‚ñë‚ñà‚ñà‚ñà           ‚ñë‚ñà‚ñà‚ñà  ‚ñà ‚ñë    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñë 
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà          ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà         ‚ñë‚ñà‚ñà‚ñà             ‚ñë‚ñà‚ñà‚ñà           ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
 ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà          ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà         ‚ñë‚ñà‚ñà‚ñà             ‚ñë‚ñà‚ñà‚ñà           ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà       ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñà            ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà ‚ñë   ‚ñà       ‚ñë‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà ‚ñë   ‚ñà      ‚ñë‚ñë‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà      ‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñë   ‚ñà    ‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà
 ‚ñà‚ñà‚ñà‚ñà‚ñà           ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà       ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñë‚ñë‚ñë‚ñë‚ñë           ‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë       ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë         ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  "
# Fonction de g√©n√©ration pour chaque algorithme
generate_key() {
  algo=$1

  read -p "üîë Nom de base pour vos cl√©s : " nom
  if [[ -z "$nom" ]]; then
    echo "‚ùå Le nom ne peut pas √™tre vide."
    return
  fi

  case "$algo" in
    RSA)
      read -p "üìè Taille de la cl√© RSA (2048 ou 4096) : " bits
      openssl genpkey  -algorithm RSA -out "priv_key_${nom}.pem" -pkeyopt rsa_keygen_bits:$bits
      openssl rsa -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      ;;
    DSA)
      read -p "üìè Taille de la cl√© DSA (1024, 2048, 3072) : " bits
      openssl dsaparam -out dsa_param.pem $bits
      openssl gendsa -out "priv_key_${nom}.pem" dsa_param.pem
      openssl dsa -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      rm -f dsa_param.pem
      ;;
    EC)
      echo "üìã Courbes disponibles (extrait) :"
      openssl ecparam -list_curves | head -n 15
      read -p "üåÄ Nom de la courbe (ex: secp384r1) : " curve
      openssl ecparam -name "$curve" -genkey -noout -out "priv_key_${nom}.pem"
      openssl ec -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      ;;
    ED25519)
      openssl genpkey -algorithm ED25519 -out "priv_key_${nom}.pem"
      openssl pkey -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      ;;
    ED448)
      openssl genpkey -algorithm ED448 -out "priv_key_${nom}.pem"
      openssl pkey -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      ;;
    X25519)
      openssl genpkey -algorithm X25519 -out "priv_key_${nom}.pem"
      openssl pkey -in "priv_key_${nom}.pem" -pubout -out "pub_key_${nom}.pem"
      ;;
    *)
      echo "‚ùå Algorithme inconnu."
      return
      ;;
  esac

  read -p "üîê Souhaitez-vous prot√©ger la cl√© priv√©e par mot de passe ? [Y/N] " secure
  if [[ "$secure" == "Y" || "$secure" == "y" ]]; then
    openssl pkey -in "priv_key_${nom}.pem" -aes256 -out "priv_key_${nom}_secure.pem"
    rm "priv_key_${nom}.pem"
    echo "‚úÖ Paires de cl√©s g√©n√©r√©es :"
    echo "üîí Cl√© priv√©e chiffr√©e avec AES256."
    echo "  üîí priv_key_${nom}_secure.pem"
    echo "  üîì pub_key_${nom}.pem"
  else
  	echo "‚úÖ Paires de cl√©s g√©n√©r√©es :"
  	echo "  üîí priv_key_${nom}.pem"
  	echo "  üîì pub_key_${nom}.pem"
  fi
}
# Menu interactif
while true; do
  echo ""
  echo "====== G√©n√©rateur de cl√©s asym√©triques OpenSSL ======"
  echo "1. RSA (Chiffrement, signature) "
  echo "2. DSA (Signature) "
  echo "3. EC (Elliptic Curve)(Signature, √©change de cl√©s (ECDH)) "
  echo "4. ED25519 (Signature moderne rapide) "
  echo "5. ED448 (Signature) "
  echo "6. X25519 (√âchange de cl√© (ECDH)) "
  echo "7. Retour"
  echo "====================================================="
  read -p "Ton choix : " choix
  case "$choix" in
    1) generate_key RSA ;;
    2) generate_key DSA ;;
    3) generate_key EC ;;
    4) generate_key ED25519 ;;
    5) generate_key ED448 ;;
    6) generate_key X25519 ;;
    7) clear ; bash ./project; break ;;
    *) echo "‚ùå Choix invalide." ;;
  esac
done
