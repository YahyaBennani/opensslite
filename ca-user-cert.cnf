# pour signer un certificat utilsateur

[ ca ]
default_ca	= CA_default		# The default ca section


[ CA_default ]

dir		= /home/kali/project/p		# Where everything is kept
certs		= $dir/certs			# Where the issued certs are kept
crl_dir		= $dir/crl			# Where the issued crl are kept
database	= $dir/index.txt		# database index file.
new_certs_dir	= $dir/newcerts			# default place for new certs.

certificate	= $dir/certs/ca.pem	 		# The CA certificate
serial		= $dir/serial 			# The current serial number
crl		= $dir/ca.crl 			# The current CRL
private_key	= $dir/private/ca.key		# The private key

RANDFILE	= $dir/private/.rand		# private random number file


default_days	= 365			# how long to certify for
default_crl_days= 30			# how long before next CRL
default_md	= md5			# which md to use.
preserve	= no			# keep passed DN ordering

x509_extensions	= user_cert
copy_extensions = none
policy		= policy_anything

[ user_cert ]

basicConstraints	= critical, CA:false
authorityKeyIdentifier	= keyid:always
subjectKeyIdentifier	= hash
keyUsage 		= digitalSignature, nonRepudiation, keyEncipherment
extendedKeyUsage	= clientAuth, emailProtection
nsCertType		= client, email, objsign
nsComment		= "Certificat utilisateur genere par OpenSSL pour INT/LOR"

subjectAltName		= email:copy
#issuerAltName		= issuer:copy

#nsCaRevocationUrl	= http://www.domain.dom/ca-crl.pem
#nsBaseUrl
nsRevocationUrl	= ldap://mesange.ensi-bourges.fr:9009/ou=PKI,o=INT,c=FR?certificateRevocationList?sub?(cn=CRL)
#nsRenewalUrl
#nsCaPolicyUrl
#nsSslServerName




[ policy_anything ]

countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= supplied
